Центрите за вакцинација низ државата секојдневно испраќаат информации до централниот сервер за аналитика на податоците.
Се испраќаат информации за бројот на вакцинирани со Фајзер, бројот на вакцинирани со Синовак и бројот на вакцинирани
со АстраЗенека на дневно ниво. На сликата е прикажано сценарио за комуникација меѓу серверот и клиентот при праќање на
дневната статистика. Вашата задача е да го имплементирате само серверскиот дел од проблемот со тоа што:
- Серверот треба да слуша на порта 5555.
- Серверот треба да поддржува конкурентна комуникација со повеќе клиенти (ковид центри).

Сите податоци кои серверот ги добива од клиентот треба да се логираат (запишат) во data.csv датотеката чија локација е
предадена како аргумент fileOutput преку конструкторот на серверот. Таа датотека не смее да се пребрише доколку постои,
потребно е само да се дополнува (append).

Header за csv датотеката:
date, No. of vaccinated with Pfizer, No. of vaccinated with Sinovac, No. of vaccinated with AstraZeneca

Пример линија во csv датотеката:
10/10/2021, 1000, 1350, 950

Објаснување за секој од чекорите е прикажано во продолжение:
1. При нова конекција, серверот праќа порака HELLO <client_ip_address> каде на местото на client_ip_address треба да
стои IP адресата на клиентот.
2. При примање на порака од Чекор 1, клиентот враќа порака со следната содржина: HELLO <local_port_number> каде
local_port_number е локалната порта која клиентот ја користи во комуникацијата.
3. Доколку успешно ја прими пораката од Чекор 2, серверот враќа порака SEND DAILY DATA, инаку фрла Exception.
4. Штом пристигне пораката SEND DAILY DATA, клиентот праќа порака со информации за дневната статистика во форматот:
No. of vaccinated with Pfizer, No. of vaccinated with Sinovac, No. of vaccinated with AstraZeneca
5. Серверот враќа порака OK доколку пораката ги содржи сите три информации, инаку фрла Exception.
6. За крај на комуникацијата, клиентот праќа QUIT.
