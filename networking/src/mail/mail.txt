На сликата е прикажано сценарио за комуникација меѓу сервер и клиент при праќање на e-mail. Ваша задача е да го
имплементирате само серверскиот дел од проблемот со тоа што:
- серверот треба да слуша на порта 5432.
- серверот треба да поддржува конкурентна комуникација со повеќе клиенти.

Сите податоци кои серверот ги добива од клиентот треба да се логираат (запишат) во log.dat датотеката чија локација е
предадена како аргумент fileOutput преку конструкторот на серверот. Таа датотека не смее да се пребрише доколку постои,
потребно е само да се дополнува (append).

Објаснувањето за секој од чекорите е прикажано во продолжение:

Чекор 1. При нова конекција, серверот праќа порака READY до клиентот со што го назначува почетокот на комуникацијата.

Чекор 2. Клиентот праќа информација за праќач на мејлот преку пораката MAIL FROM: <emailFrom>. emailFrom е
променлива која ја чува клиентот и треба да претставува валидна мејл адреса.

Чекор 3. Доколку email адресата е валидна, серверот враќа успешен статус код 250, инаку фрла Exception.

Чекор 4. Клиентот штом ја прими информацијата за успешен статус код од серверот, ја праќа email адресата до која треба
да се достави пораката преку пораката: MAIL TO: <emailTo>. emailTo е променлива која ја чува клиентот локално.

Чекор 5. Доколку email адресата е валидна, серверот враќа порака THANK YOU до клиентот. Ако не е, фрла Exception.

Чекор 6. Клиентот го праќа предметот на пораката во формат SUBJECT:<mailSubject> каде mailSubject променливата ја
чува клиентот.

Чекор 7. Серверот враќа порака OK доколку предметот на пораката не е подолг од 200 карактери, инаку фрла Exception.

Чекор 8. Клиентот почнува со праќање на податоците линија по линија. За крај, последната линија содржи само !
(извичник).

Чекор 9. Серверот враќа порака RECEIVED <total> bytes, каде total означува вкупниот број на бајти колку што се пратени
во претходниот чекор преку <DATA>.

Чекор 10. За крај на комуникација, клиентот праќа BYE.